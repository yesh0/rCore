#+title: 更新日志（第十二周）

基本把上周定下的都大致实现了。

* 未知长度区域的跟踪

区域信息：
- 头部指针
- 尾部指针

获得新信息：
- ~if begin + size <= end~

这部分内容其实也是在为下面资源管理作准备，
因为 *资源可以进行的操作* 明显是 *面向对象* 的思维，
而 eBPF 的 *helper 函数* 又回到了面向过程。

这方面的接口需要稍微折腾一下，特别 Rust upcast downcast 不太方便。

* 实现资源分配与释放的跟踪

资源信息：
- 资源类型 id
- 资源 id

需不需要释放：
- 通过外部提供的 map 等，无需（不应）释放
- 程序自己申请的，需要释放

何时验证：
- 函数返回时：
  - 这个和多函数共用一块接口，所以这里也顺便把多函数验证的接口写了。

** 待做事项

Relocation 可以看作是外部提供的资源，这部分可以开始写了。

* 更多待做事项

回去翻了一下期中汇报的内容，目前的进度：

- [-] 复杂部分
  - [X] 值的跟踪、指针对应内存范围跟踪 =Week 9-10=
  - [-] 分支遍历
    - [-] 分支状态管理 =Week 10-13=
      - [X] 单个函数分支管理
      - [ ] 多个函数分支管理 *<---*
    - [ ] 分支合并 =Optional= *<---*
  - [X] 验证外部提供的函数 =Week 13=
    - [X] 接口定义 =Week 12=
- [-] 各种测试 *<---*
  - 目前 coverage 80% 左右
- [-] API 设计 *<---*

现在预想大概下一周把多函数分支管理实现，
最后对外提供一个较易于使用的接口，并对相对复杂的测例进行测试。

+Full coverage 和分支合并暂时就不想了。+
